<?php
/**
 * Created by PhpStorm.
 * User: Maciej
 * Date: 2014-05-07
 * Time: 07:50
 */

namespace App\LanguageBundle\Form\Handler;


use App\LanguageBundle\Locale\AvailableLocalesProvider;
use Lexik\Bundle\TranslationBundle\Manager\FileManagerInterface;
use Lexik\Bundle\TranslationBundle\Manager\TransUnitManagerInterface;
use Lexik\Bundle\TranslationBundle\Storage\StorageInterface;

class TransUnitFormHandler extends \Lexik\Bundle\TranslationBundle\Form\Handler\TransUnitFormHandler
{
    /**
     * @var AvailableLocalesProvider
     */
    protected $localesProvider;

    protected $staticManagedLocales;

    public function __construct(TransUnitManagerInterface $transUnitManager, FileManagerInterface $fileManager, StorageInterface $storage, AvailableLocalesProvider $localesProvider, array $managedLocales, $rootDir)
    {
        $this->localesProvider = $localesProvider;
        $this->staticManagedLocales = $managedLocales;
        parent::__construct($transUnitManager, $fileManager, $storage, $managedLocales, $rootDir); // TODO: Change the autogenerated stub
        $this->managedLocales = null;


    }

    protected function getManagedLocales($cached = true){
        if($this->managedLocales === null || $cached == false){
            $this->managedLocales = array_unique(array_merge($this->staticManagedLocales, $this->localesProvider->getAvailableBackendLocales()));
        }

        return $this->managedLocales;
    }

    /**
     * {@inheritdoc}
     */
    public function createFormData($cached_locales = true)
    {
        return $this->transUnitManager->newInstance($this->getManagedLocales($cached_locales));
    }

} 