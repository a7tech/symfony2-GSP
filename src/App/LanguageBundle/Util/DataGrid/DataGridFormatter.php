<?php
/**
 * Created by PhpStorm.
 * User: Maciej
 * Date: 2014-05-07
 * Time: 20:40
 */

namespace App\LanguageBundle\Util\DataGrid;

use App\LanguageBundle\Locale\AvailableLocalesProvider;
use Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridFormatter as BaseDataGridFormatter;

class DataGridFormatter extends BaseDataGridFormatter
{
    /**
     * @var AvailableLocalesProvider
     */
    protected $localesProvider;

    protected $managedLocales;

    public function __construct(AvailableLocalesProvider $localesProvider, array $locales, $storage)
    {
        $this->localesProvider = $localesProvider;
        parent::__construct($locales, $storage); // TODO: Change the autogenerated stub
    }

    protected function getLocales($cached = true)
    {
        if($this->managedLocales === null || $cached === false){
            $this->managedLocales = array_unique(array_merge($this->locales, $this->localesProvider->getAvailableBackendLocales()));
        }

        return $this->managedLocales;
    }

    /**
     * Format a single TransUnit.
     *
     * @param array $transUnit
     * @return array
     */
    protected function formatOne($transUnit)
    {
        if (is_object($transUnit)) {
            $transUnit = $this->toArray($transUnit);
        }

        $formatted = array(
            'id'     => ('mongodb' == $this->storage) ? $transUnit['_id']->{'$id'} : $transUnit['id'],
            'domain' => $transUnit['domain'],
            'key'    => $transUnit['key'],
        );


        $locales = $this->getLocales();
        // add locales in the same order as in managed_locales param
        foreach ($locales as $locale) {
            $formatted[$locale] = '';
        }

        // then fill locales value
        foreach ($transUnit['translations'] as $translation) {
            if (in_array($translation['locale'], $locales)) {
                $formatted[$translation['locale']] = $translation['content'];
            }
        }

        return $formatted;
    }

} 